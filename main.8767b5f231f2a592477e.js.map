{"version":3,"sources":["webpack:///./index.js"],"names":["Masonry","require","InfiniteScroll","imagesLoaded","msnry","itemSelector","columnWidth","gutter","percentPosition","stagger","visibleStyle","transform","opacity","hiddenStyle","url","infScroll","path","console","log","this","pageIndex","responseType","outlayer","status","history","proxyElem","document","createElement","on","response","itemsHTML","JSON","parse","map","getItemHTML","join","innerHTML","items","querySelectorAll","appendItems","appended","loadNextPage","itemTemplateSrc","querySelector","photo","data","replace","match","key","value","split","forEach","part"],"mappings":"6MAEIA,EAAUC,EAAQ,QAClBC,EAAiBD,EAAQ,QACzBE,EAAeF,EAAQ,QAE3BC,EAAeC,aAAeA,EAE9B,IAAIC,EAAQ,IAAIJ,EAAQ,QAAS,CAC/BK,aAAc,cACdC,YAAa,mBACbC,OAAQ,sBACRC,iBAAiB,EACjBC,QAAS,GAETC,aAAc,CAAEC,UAAW,gBAAiBC,QAAS,GACrDC,YAAa,CAAEF,UAAW,oBAAqBC,QAAS,KAWpDE,EAAM,+HAKRC,EAAY,IAAIb,EAAe,QAAS,CAC1Cc,KAAM,WAEJ,OADAC,QAAQC,IAAIJ,EAAM,SAAWK,KAAKC,WAC3BN,EAAM,SAAWK,KAAKC,WAU/BC,aAAc,OACdC,SAAUlB,EACVmB,OAAQ,oBACRC,SAAS,IAIPC,EAAYC,SAASC,cAAc,OAEvCZ,EAAUa,GAAG,QAAQ,SAAUC,GAE7B,IAEIC,EAFOC,KAAKC,MAAMH,GAEDI,IAAIC,GAAaC,KAAK,IAE3CV,EAAUW,UAAYN,EAEtB,IAAIO,EAAQZ,EAAUa,iBAAiB,eACvCnC,EAAakC,GAAO,WAClBtB,EAAUwB,YAAYF,GACtBjC,EAAMoC,SAASH,SAKnBtB,EAAU0B,eAIV,IAAIC,EAAkBhB,SAASiB,cAAc,wBAAwBP,UAErE,SAASF,EAAYU,GACnB,OAI0BC,EAJYD,EAAjBF,EAMVI,QAAQ,0BAA0B,SAAUC,EAAOC,GAE5D,IAAIC,EAAQJ,EAIZ,OAHAG,EAAIE,MAAM,KAAKC,SAAQ,SAAUC,GAC/BH,EAAQA,EAAMG,MAETH,KARX,IAA4BJ,K","file":"main.8767b5f231f2a592477e.js","sourcesContent":["import './styles.css';\n\nvar Masonry = require('masonry-layout');\nvar InfiniteScroll = require('infinite-scroll');\nvar imagesLoaded = require('imagesloaded');\n// make imagesLoaded available for InfiniteScroll\nInfiniteScroll.imagesLoaded = imagesLoaded;\n\nvar msnry = new Masonry('.grid', {\n  itemSelector: '.photo-item',\n  columnWidth: '.grid__col-sizer',\n  gutter: '.grid__gutter-sizer',\n  percentPosition: true,\n  stagger: 30,\n  // nicer reveal transition\n  visibleStyle: { transform: 'translateY(0)', opacity: 1 },\n  hiddenStyle: { transform: 'translateY(100px)', opacity: 0 },\n});\n\n//------------------//\n\n// Get an API key for your demos at https://unsplash.com/developers\nvar unsplashID =\n  '9ad80b14098bcead9c7de952435e937cc3723ae61084ba8e729adb642daf0251';\n\nconst key = '19471965-37c13a0c7cc27691c95ac1581';\nconst strQuery = 'beach';\nconst url = `https://cors-anywhere.herokuapp.com/https://pixabay.com/api/?key=${key}&q=${strQuery}&image_type=photo`;\n// const NumberOfPhotos = 12;\n// const orientation = 'all';\n// const url = `https://pixabay.com/api?key=${key}&q=${strQuery}&image_type=photo&per_page=${NumberOfPhotos}&orientation=${orientation}`;\n\nvar infScroll = new InfiniteScroll('.grid', {\n  path: function () {\n    console.log(url + '&page=' + this.pageIndex);\n    return url + '&page=' + this.pageIndex;\n\n    // return (\n    //   'https://api.unsplash.com/photos?client_id=' +\n    //   unsplashID +\n    //   '&page=' +\n    //   this.pageIndex\n    // );\n  },\n  // load response as flat text\n  responseType: 'text',\n  outlayer: msnry,\n  status: '.page-load-status',\n  history: false,\n});\n\n// use element to turn HTML string into elements\nvar proxyElem = document.createElement('div');\n\ninfScroll.on('load', function (response) {\n  // parse response into JSON data\n  var data = JSON.parse(response);\n  // compile data into HTML\n  var itemsHTML = data.map(getItemHTML).join('');\n  // convert HTML string into elements\n  proxyElem.innerHTML = itemsHTML;\n  // append item elements\n  var items = proxyElem.querySelectorAll('.photo-item');\n  imagesLoaded(items, function () {\n    infScroll.appendItems(items);\n    msnry.appended(items);\n  });\n});\n\n// load initial page\ninfScroll.loadNextPage();\n\n//------------------//\n\nvar itemTemplateSrc = document.querySelector('#photo-item-template').innerHTML;\n\nfunction getItemHTML(photo) {\n  return microTemplate(itemTemplateSrc, photo);\n}\n\n// micro templating, sort-of\nfunction microTemplate(src, data) {\n  // replace {{tags}} in source\n  return src.replace(/\\{\\{([\\w\\-_\\.]+)\\}\\}/gi, function (match, key) {\n    // walk through objects to get value\n    var value = data;\n    key.split('.').forEach(function (part) {\n      value = value[part];\n    });\n    return value;\n  });\n}\n"],"sourceRoot":""}